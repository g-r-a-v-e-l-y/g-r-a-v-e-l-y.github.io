sub parser {
 	my ($line) = $_[0];
 	if ($line =~ /^ERROR :Closing Link: (.*)/) {
   		console("*** ERROR: $1\n");
   		close($sock);
   		serverconnect();
   		return;
  	}
 	elsif ($line =~ /^PING :(.*)/) {
   		sockwrite($sock,"PONG :$1");
  	}
	elsif ($line =~ /^:(.*) NOTICE AUTH :(.*)$/) {
		$trueserver = $1;
	}
	elsif($line =~ /:([^ ]*) 311 ([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*) :(.*)/) {
   		$wnick = lc($3);
   		$wuser = lc($4);
   		$waddy = lc($5);
   		$whost = "$wuser\@$waddy";
		if($wreason{$wnick} eq "kickban") {
     			sockwrite($sock,"MODE $wkickchan{$wnick} +b *!*\@$waddy");
     			sockwrite($sock,"KICK $wkickchan{$wnick} $wnick :$wkickreason{$wnick}");
     			undef($wreason{$wnick});
    		}
 	  	if($wreason{$wnick} eq "akick") {
     			foreach $chan (keys %channels) {
       				sockwrite($sock,"MODE $chan +b *!*\@$waddy");
       				sockwrite($sock,"KICK $chan $wnick :akick");
      			}
     			open(AKICK,">>./data/akick.db");
     			$akick = "\*" . "\@" . "$waddy";
     			$akick =~ s/\*/\.\*/g;
     			$akick =~ s/\?/\.\?/g;
     			print AKICK "$akick\n";
     			close(AKICK);
    		}
   		if($wreason{$wnick} eq "access") {
     			$check = checkhost(lc($wnick),$whost);
     			if($check ne lc($wnick)) {
       				sockwrite($sock,"PRIVMSG $uchan :$wnick \($whost\) is a normal user.");
      			}
     			elsif($check eq lc($wnick)) {
       				sockwrite($sock,"PRIVMSG $uchan :$wnick \($whost\) is $response{lc($wnick)}\.");
      			}
    		}
  	}
	elsif($line =~ /:([^ ]*) 401 ([^ ]*) ([^ ]*) :(.*)/) {
   		$wnick = lc($3);
   		if($wreason{$wnick} eq "access") {
     			sockwrite($sock,"PRIVMSG $uchan :$wnick \(offline\) is $response{lc($wnick)}\.");
    		}
  	}
 	elsif ($line =~ /^:(.*) ([0-9]{3}) ([^ :]*) [:]?(.*)$/) {
   		$text = $4;
   		$nik = $3;
		if ($2=="001") {
    			nsident();
    			if ($aaway eq true) {
      				sockwrite($sock,"AWAY :$aamsg");
     			}
    			console("*** auto joining\n");
    			foreach $chan (keys %channels) {
      				$channels{$chan} =~ /([^,]*)[,]?(.*)/;
      				$key = $2;
      				sockwrite($sock,"JOIN $chan $key");
     			}
    		}
   		elsif ($2=="302") {
     			$text =~ /^(.*)=[\-\+]?(.*)$/;
     			$nhosts{lc($1)} = $2;
     			foreach $chan (keys %needinvchan) {
      				if ($needinvchan{$chan} eq true) {
        				$needinvite{$chan} =~ /^([^ ]*) ([^ ]*) (.*)$/;
        				$user = $1;
        				$nnick = $2;
        				$msg = $3;
        				$nuser = checkhost($user,$nhosts{lc($nnick)});
        				if ($nuser eq $user) {
          					sockwrite($sock,"PRIVMSG $nnick :$msg");
         				}
       				}
      			}
     		}
  		elsif ($2=="433" || $2=="437") {
	    		$curnick++;
	    		if ($curnick > $#nicks) { $curnick=0; }
    			$nick = quotemeta($nicks[$curnick]);
    			sockwrite($sock,"NICK $nicks[$curnick]");
    			console("*** changed nick to $nick\n");
   		}
	}
 	elsif ($line =~ /^:([^: ]*)!([^: ]*) KICK ([^: ]+) $nick :(.*)$/) {
   		$kicked = $3;
   		sockwrite($sock,"JOIN $kicked");
  	}
 	elsif ($line =~ /^:(.*)!(.*) JOIN [:]?(.*)$/) {
   		$unick = lc($1);
   		$botnick = lc($nick);
   		$uhost = $2;
   		$uchan = $3;
   		$uhost =~ /(.*)\@(.*)/;
   		$uident = $1;
   		$uaddy = $2;
   		$names{lc($uchan)} .= " $unick";
   		$nnick = checkhost(lc($unick),$uhost);
   		$nhosts{lc($unick)}=$uident.'@'.$uaddy;
   		open(FILE,"./data/akick.db");
   		while (!eof(FILE)) {
     			$akick = <FILE>;
     			chomp($akick);
     			$akicked = checkonehost($akick,$uhost);
     			if($akicked eq "true") {
       				sockwrite($sock,"MODE $uchan +b \*\!\*\@$uaddy");
       				sockwrite($sock,"KICK $uchan $unick :akicked");
      			}
    		}
    		close(FILE);
  	}
 	elsif ($line =~ /^:(.*)!(.*) PART [:]?(.*)$/) {
   		$unick = lc($1);
   		$uhost = $2;
   		$uchan = $3;
   		$uhost =~ /(.*)\@(.*)/;
   		$uident = $1;
   		$uaddy = $2;
   		$names{lc($uchan)} .= " $unick";
   		$nnick = checkhost(lc($unick),$uhost);
   		$nhosts{lc($unick)}=$uident.'@'.$uaddy;
  	}
 	elsif ($line =~ /^:([^: ]*)!([^: ]*) PRIVMSG ([^: ]+) :(.*)$/) {
   		$unick = lc($1);
   		$uhost = lc($2);
   		$uchan = lc($3);
   		$utext = $4;
   		$uhost =~ /(.*)\@(.*)/;
   		$uident = $1;
   		$uaddy = $2;
   		$query = false;
   		if($utext =~ /^$cmdprefix (.*)$/) { $cmdcount += 1; }
   		if (lc($uchan) eq lc($nick)) { $uchan=$unick; $query=true; }
   		$nnick = checkhost(lc($unick),$uhost);
		$identd = true;

                if ($ignored{$unick} == "1" && $ulevel{$unick} < 5) { return 1; }
		elsif($ack > $ulevel{$unick} && $ulevel{$unick} < 5) { return 1; }
		else {
	   		if ($utext =~ /^\x01PING (.*)\x01/) {
	     			sockwrite($sock,"NOTICE $unick :\x01PING $1\x01");
	     			$ctcpcount += 1;
	    		}
	   		elsif ($utext =~ /^\x01VERSION\x01/) {
		     		$ctcpcount += 1;
	    			sockwrite($sock,"NOTICE $unick :\x01VERSION $version\x01");
	    		}
	   		elsif ($utext =~ /^\x01TIME\x01/) {
	     			$ctcpcount += 1;
		     		$nowtime = time();
	     			($second, $minute, $hour, $day, $month, $year, $weekday, $dayofyear, $isdst) = localtime($nowtime);
	     			if($weekday eq "1") { $weekday = "Mon"; }
	     			elsif($weekday eq "2") { $weekday = "Tues"; }
	     			elsif($weekday eq "3") { $weekday = "Wed"; }
	     			elsif($weekday eq "4") { $weekday = "Thurs"; }
	     			elsif($weekday eq "5") { $weekday = "Fri"; }
	     			elsif($weekday eq "6") { $weekday = "Sat"; }
	     			elsif($weekday eq "7") { $weekday = "Sun"; }
	     			if($month eq "0") { $month = "Jan"; }
	     			elsif($month eq "1") { $month = "Feb"; }
	     			elsif($month eq "2") { $month = "Mar"; }
	     			elsif($month eq "3") { $month = "Apr"; }
	     			elsif($month eq "4") { $month = "May"; }
	     			elsif($month eq "5") { $month = "June"; }
	     			elsif($month eq "6") { $month = "July"; }
	     			elsif($month eq "7") { $month = "Aug"; }
	     			elsif($month eq "8") { $month = "Sep"; }
	     			elsif($month eq "9") { $month = "Oct"; }
	     			elsif($month eq "10") { $month = "Nov"; }
	     			elsif($month eq "11") { $month = "Dec"; }
	     			$year =~ /1(.*)/;
	     			$year = "20" . "$1";
	     			sockwrite($sock,"NOTICE $unick :\x01TIME $weekday $month $day $hour:$minute:$second $year\x01");
	    		}
			elsif($utext =~ /^$cmdprefix$/) {
				sockwrite($sock,"PRIVMSG $uchan :Yes, $unick?");
			}
			elsif($utext =~ /^$cmdprefix debug (.*)$/ || $uchan eq $unick && $utext =~ /^debug (.*)$/) {
				$string = $1;
				if(check_command_hook("debug") ne "-1") {
					$status = hook_debug("debug $string");
					if($status eq "-1") {
						sockwrite($sock,"PRIVMSG $uchan :No access.");
					}
					if($status eq "0") {
						sockwrite($sock,"PRIVMSG $uchan :Invalid Syntax.");
					}
				}
				else {
					sockwrite($sock,"PRIVMSG $uchan :Invalid command.");
				}
			}
                        elsif($utext =~ /^$cmdprefix eval (.*)$/ || $uchan eq $unick && $utext =~ /^eval (.*)$/) {
                                $string = $1;
                                if(check_command_hook("debug") ne "-1") {
                                        $status = hook_eval("eval $string");
                                        if($status eq "-1") {
                                                sockwrite($sock,"PRIVMSG $uchan :No access.");
                                        }
                                        if($status eq "0") {
                                                sockwrite($sock,"PRIVMSG $uchan :Invalid Syntax.");
                                        }
                                }
                                else {
                                        sockwrite($sock,"PRIVMSG $uchan :Invalid command.");
                                }
                        }
			elsif($uchan eq $unick) {
                                $temp = $utext; $post = $temp; $text = $utext;
                                $temp =~ /([^ ]+) (.*)$/;
                                $key = $1;
                                $hookstate = process_command_hook($key,$post);
                                if($hookstate eq "0") {
                                        sockwrite($sock,"PRIVMSG $uchan :Invalid command.");
                                }
                                else {
                                        if($debugmode eq "1") {
                                                sockwrite($sock,"PRIVMSG $uchan :Done..");
                                        }
                                }
			}
			elsif($utext =~ /^$cmdprefix (.*)$/) {
				$temp = $1; $post = $temp; $text = $utext;
				$temp =~ /([^ ]+) (.*)$/;
				$key = $1; $rest = $2;
				$hookstate = process_command_hook($key,$post);
				if($hookstate eq "0") {
					sockwrite($sock,"PRIVMSG $uchan :Invalid command.");
				}
				else {
					if($debugmode eq "1") {
						sockwrite($sock,"PRIVMSG $uchan :Done..");
					}
				}
			}
		}
	}
}
